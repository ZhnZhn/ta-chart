{"version":3,"sources":["../../../../src/components/drawer/page-altcoins/PageAltCoins.jsx"],"names":["S","ROOT","height","_crExchanges","ccxt","exchanges","map","crOptionItem","PageAltCoins","style","onPrevPage","AppValue","loadData","reducer","initialState","state","dispatch","exchange","pair","isMarkets","markets","refExchange","type","current","proxy","C","PROXY","rateLimit","RATE_LIMIT","exchImpl","onSelectExchange","item","value","INITIAL_EXCHANGE","onSelectMarket"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA,IAAMA,IAAI;AACRC,QAAM;AACJC,YAAQ;AADJ;AADE,CAAV;;AAMA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAAMC,eAAKC,SAAL,CAAeC,GAAf,CAAmBC,qBAAnB,CAAN;AAAA,CAArB;;AAEA,IAAMC,eAAe,SAAfA,YAAe,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,oBACzB,uBAAWC,kBAAX,CADyB;AAAA,MACtCC,QADsC,eACtCA,QADsC;;AAAA,oBAEpB,uBAAWC,iBAAX,EAAoBC,sBAApB,CAFoB;AAAA;AAAA,MAEvCC,KAFuC;AAAA,MAEhCC,QAFgC;AAAA,MAG1CC,QAH0C,GAK1CF,KAL0C,CAG1CE,QAH0C;AAAA,MAGhCC,IAHgC,GAK1CH,KAL0C,CAGhCG,IAHgC;AAAA,MAG1BC,SAH0B,GAK1CJ,KAL0C,CAG1BI,SAH0B;AAAA,MAI1Cd,SAJ0C,GAK1CU,KAL0C,CAI1CV,SAJ0C;AAAA,MAI/Be,OAJ+B,GAK1CL,KAL0C,CAI/BK,OAJ+B;AAAA,MAM5CC,WAN4C,GAM9B,mBAAO,IAAP,CAN8B;;AAQ9C,wBAAU,YAAM;AACdL,aAAS;AACPM,YAAM,eADC;AAEPjB,iBAAWF;AAFJ,KAAT;AAID,GALD,EAKG,EALH;;AAOA,wBAAU,YAAI;AACZ,QAAIc,QAAJ,EAAc;AACZI,kBAAYE,OAAZ,GAAsB,IAAInB,eAAKa,QAAL,CAAJ,CAAmB;AACvCO,eAAOC,iBAAEC,KAD8B;AAEvCC,mBAAWF,iBAAEG;AAF0B,OAAnB,CAAtB;AAIA,iCAAY;AACVZ,0BADU,EACAC,kBADA;AAEVY,kBAAUR,YAAYE;AAFZ,OAAZ;AAID;AACF,GAXD,EAWG,CAACN,QAAD,CAXH;;AAaA,wBAAU,YAAM;AACd,QAAIC,IAAJ,EAAU;AACR,8BAAS;AACPD,0BADO,EACGC,UADH;AAEPW,kBAAUR,YAAYE,OAFf;AAGPX;AAHO,OAAT;AAKD;AACF,GARD,EAQG,CAACM,IAAD,CARH;;AAUA,MAAMY,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACjC,QAAIA,IAAJ,EAAU;AACRf,eAAS;AACPM,cAAM,cADC;AAEPL,kBAAUc,KAAKC,KAAL,IAAcP,iBAAEQ;AAFnB,OAAT;AAID;AACF,GAPD;;AASA,MAAMC,iBAAiB,SAAjBA,cAAiB,CAACH,IAAD,EAAU;AAC/B,QAAIA,IAAJ,EAAS;AACPf,eAAS;AACPM,cAAM,UADC;AAEPJ,cAAMa,KAAKC;AAFJ,OAAT;AAID;AACF,GAPD;;AASA,SACE;AAAA;AAAA,MAAK,kCAAYhC,EAAEC,IAAd,EAAuBQ,KAAvB,CAAL;AACE,kCAAC,oBAAD;AACE,eAASC;AADX,MADF;AAIE,kCAAC,oBAAD;AACE,iBAAWL,SADb;AAEE,wBAAkByB,gBAFpB;AAGE,iBAAWX,SAHb;AAIE,eAASC,OAJX;AAKE,sBAAgBc;AALlB;AAJF,GADF;AAcD,CAtED;;kBAwEe1B,Y","file":"PageAltCoins.js","sourcesContent":["import React, { useReducer, useEffect, useRef, useContext } from 'react'\r\n\r\nimport ccxt from 'ccxt'\r\n\r\nimport BackMenuBt from '../BackMenuBt'\r\n\r\nimport AppValue from '../../contexts/AppValue'\r\nimport CoinSelect from './CoinSelect'\r\n\r\nimport C from '../../config'\r\nimport reducer from './reducer'\r\nimport initialState from './initialState'\r\n\r\nimport loadMarkets from './loadMarkets'\r\nimport loadPair from './loadPair'\r\n\r\nimport { crOptionItem } from './pageFns';\r\n\r\nconst S = {\r\n  ROOT: {\r\n    height: 400\r\n  }\r\n};\r\n\r\nconst _crExchanges = () => ccxt.exchanges.map(crOptionItem);\r\n\r\nconst PageAltCoins = ({ style, onPrevPage }) => {\r\n  const { loadData } = useContext(AppValue)\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  , { exchange, pair, isMarkets,\r\n      exchanges, markets\r\n  } = state\r\n  , refExchange = useRef(null);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"EXCHANGES_SET\",\r\n      exchanges: _crExchanges()\r\n    })\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (exchange) {\r\n      refExchange.current = new ccxt[exchange]({\r\n        proxy: C.PROXY,\r\n        rateLimit: C.RATE_LIMIT\r\n      });\r\n      loadMarkets({\r\n        dispatch, exchange,\r\n        exchImpl: refExchange.current\r\n      })\r\n    }\r\n  }, [exchange])\r\n\r\n  useEffect(() => {\r\n    if (pair) {\r\n      loadPair({\r\n        exchange, pair,\r\n        exchImpl: refExchange.current,\r\n        loadData\r\n      })\r\n    }\r\n  }, [pair])\r\n\r\n  const onSelectExchange = (item) => {\r\n    if (item) {\r\n      dispatch({\r\n        type: \"EXCHANGE_SET\",\r\n        exchange: item.value || C.INITIAL_EXCHANGE\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSelectMarket = (item) => {\r\n    if (item){\r\n      dispatch({\r\n        type: 'PAIR_SET',\r\n        pair: item.value\r\n      })\r\n    }\r\n  }\r\n\r\n  return  (\r\n    <div style={{ ...S.ROOT, ...style }}>\r\n      <BackMenuBt\r\n        onClick={onPrevPage}\r\n      />\r\n      <CoinSelect\r\n        exchanges={exchanges}\r\n        onSelectExchange={onSelectExchange}\r\n        isMarkets={isMarkets}\r\n        markets={markets}\r\n        onSelectMarket={onSelectMarket}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageAltCoins\r\n"]}