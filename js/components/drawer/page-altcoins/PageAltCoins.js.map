{"version":3,"sources":["../../../../src/components/drawer/page-altcoins/PageAltCoins.jsx"],"names":["crExchange","pageFns","crExchanges","crTimeframes","DF_TIMEFRAME","S","ROOT","height","PageAltCoins","style","onPrevPage","AppValue","dataAction","reducer","initialState","state","dispatch","exchange","pair","isMarkets","exchanges","markets","timeframes","setTimeframes","timeframe","setTimeframe","refExchange","type","ALTCOIN","EXCHANGES_SET","current","exchImpl","onSelectExchange","item","value","EXCHANGE_SET","onSelectTimeframe","onSelectMarket","PAIR_SET","undefined"],"mappings":"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","file":"PageAltCoins.js","sourcesContent":["import React, { useState, useReducer, useEffect, useRef, useContext } from 'react'\r\n\r\nimport BackMenuBt from '../BackMenuBt'\r\n\r\nimport AppValue from '../../contexts/AppValue'\r\nimport CoinSelect from './CoinSelect'\r\n\r\nimport reducer from './reducer'\r\nimport initialState from './initialState'\r\nimport ALTCOIN from './enumAltcoin'\r\n\r\nimport loadMarkets from './loadMarkets'\r\nimport loadPair from './loadPair'\r\n\r\nimport pageFns from './pageFns';\r\n\r\nconst {\r\n  crExchange,\r\n  crExchanges,\r\n  crTimeframes\r\n} = pageFns;\r\n\r\n\r\nconst DF_TIMEFRAME = '1d';\r\n\r\nconst S = {\r\n  ROOT: {\r\n    height: 400\r\n  }\r\n};\r\n\r\n\r\nconst PageAltCoins = ({ style, onPrevPage }) => {\r\n  const { dataAction } = useContext(AppValue)\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  , { exchange, pair, isMarkets,\r\n      exchanges, markets\r\n  } = state\r\n  , [timeframes, setTimeframes] = useState([])\r\n  , [timeframe, setTimeframe] = useState(DF_TIMEFRAME)\r\n  , refExchange = useRef(null);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: ALTCOIN.EXCHANGES_SET,\r\n      exchanges: crExchanges()\r\n    })\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if (exchange) {\r\n      refExchange.current = crExchange(exchange)\r\n      setTimeframe(DF_TIMEFRAME)\r\n      setTimeframes(crTimeframes(refExchange.current.timeframes))\r\n      loadMarkets({\r\n        dispatch, exchange,\r\n        exchImpl: refExchange.current\r\n      })\r\n    }\r\n  }, [exchange])\r\n\r\n  useEffect(() => {\r\n    if (pair && timeframe) {\r\n      loadPair({\r\n        exchange, pair,\r\n        timeframe: timeframe,\r\n        exchImpl: refExchange.current,\r\n        dataAction\r\n      })\r\n    }\r\n  }, [pair, timeframe])\r\n\r\n  const onSelectExchange = (item) => {\r\n    if (item && item.value) {\r\n      dispatch({\r\n        type: ALTCOIN.EXCHANGE_SET,\r\n        exchange: item.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSelectTimeframe = (item) => {\r\n    setTimeframe((item && item.value) || DF_TIMEFRAME)\r\n  }\r\n\r\n  const onSelectMarket = (item) => {\r\n    dispatch({\r\n      type: ALTCOIN.PAIR_SET,\r\n      pair: item && item.value || undefined\r\n    })\r\n  }\r\n\r\n  return  (\r\n    <div style={{ ...S.ROOT, ...style }}>\r\n      <BackMenuBt\r\n        onClick={onPrevPage}\r\n      />\r\n      <CoinSelect\r\n        exchanges={exchanges}\r\n        onSelectExchange={onSelectExchange}\r\n        isMarkets={isMarkets}\r\n        markets={markets}\r\n        onSelectMarket={onSelectMarket}\r\n        timeframes={timeframes}\r\n        onSelectTimeframe={onSelectTimeframe}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageAltCoins\r\n"]}