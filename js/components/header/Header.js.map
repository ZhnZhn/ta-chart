{"version":3,"sources":["../../../src/components/header/Header.jsx"],"names":["TitleSpan","text","is","CL","HEADER_TITLE","Header","fetchStatus","providerTitle","itemTitle","timeframe","rest","AppValue","theme","themeId","AppThemeId","headerStyle","getHeaderStyle","HEADER","TITLE_GAP"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,EAAT,QAASA,EAAT;AAAA,SAChB;AAAA;AAAA,MAAM,WAAWC,aAAGC,YAApB;AACGH,QADH;AAEI,KAACC,EAAD,IAAO;AAAA;AAAA;AAAA;AAAA;AAFX,GADgB;AAAA,CAAlB;;AAOA,IAAMG,SAAS,SAATA,MAAS,QAMT;AAAA,MALJC,WAKI,SALJA,WAKI;AAAA,kCAJJC,aAII;AAAA,MAJJA,aAII,uCAJU,EAIV;AAAA,8BAHJC,SAGI;AAAA,MAHJA,SAGI,mCAHM,EAGN;AAAA,8BAFJC,SAEI;AAAA,MAFJA,SAEI,mCAFM,EAEN;AAAA,MADDC,IACC;;AAAA,oBACc,uBAAWC,kBAAX,CADd;AAAA,MACIC,KADJ,eACIA,KADJ;AAAA,MAEFC,OAFE,GAEQ,uBAAWC,oBAAX,CAFR;AAAA,MAGFC,WAHE,GAGYH,MAAMI,cAAN,CAAqBH,OAArB,CAHZ;;AAIJ,SACE;AAAA;AAAA;AACE,iBAAWV,aAAGc,MADhB;AAEE,aAAOF;AAFT;AAIE,kCAAC,yBAAD,IAAiB,aAAaT,WAA9B,GAJF;AAKE,kCAAC,cAAD,OALF;AAME,4CAAM,WAAWH,aAAGe,SAApB,GANF;AAOE,kCAAC,SAAD,IAAW,MAAMX,aAAjB,GAPF;AAQE,kCAAC,SAAD,IAAW,MAAMC,SAAjB,GARF;AASE,kCAAC,SAAD,IAAW,MAAMC,SAAjB,EAA4B,IAAI,IAAhC,GATF;AAUE,kCAAC,sBAAD,EAAkBC,IAAlB;AAVF,GADF;AAcD,CAxBD;;kBA0BeL,M","file":"Header.js","sourcesContent":["import React, { useContext } from 'react'\r\n\r\nimport AppValue from '../contexts/AppValue'\r\nimport AppThemeId from '../contexts/AppThemeId'\r\n\r\nimport Logo from '../zhn/Logo'\r\n\r\nimport CL from '../styles/CL'\r\nimport ProgressLoading from './ProgressLoading'\r\nimport HeaderDrawer from '../drawer/HeaderDrawer'\r\n\r\nconst TitleSpan = ({ text, is }) => (\r\n  <span className={CL.HEADER_TITLE}>\r\n    {text}\r\n    { !is && <span>:&nbsp;</span> }\r\n  </span>\r\n);\r\n\r\nconst Header = ({\r\n  fetchStatus,\r\n  providerTitle='',\r\n  itemTitle='',\r\n  timeframe='',\r\n  ...rest\r\n}) => {\r\n  const { theme } = useContext(AppValue)\r\n  , themeId = useContext(AppThemeId)\r\n  , headerStyle = theme.getHeaderStyle(themeId);\r\n  return (\r\n    <header\r\n      className={CL.HEADER}\r\n      style={headerStyle}\r\n    >\r\n      <ProgressLoading fetchStatus={fetchStatus} />\r\n      <Logo />\r\n      <span className={CL.TITLE_GAP} />\r\n      <TitleSpan text={providerTitle} />\r\n      <TitleSpan text={itemTitle} />\r\n      <TitleSpan text={timeframe} is={true} />\r\n      <HeaderDrawer {...rest} />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header\r\n"]}