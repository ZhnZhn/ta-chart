{"version":3,"sources":["../../../src/components/zhn-select/InputSelect.jsx"],"names":["MAX_WITHOUT_ANIMATION","CL_ROOT","CL","ROOT","INPUT","SPINNER","SPINNER_FAILED","INPUT_HR","OPTIONS","OPTIONS_DIV","OPTIONS_ROW","OPTIONS_ROW_ACTIVE","FOOTER","FOOTER_INDEX","FOOTER_BTS","FOOTER_MARGIN","NOT_SELECTED","INPUT_PREFIX","_fnNoItem","propCaption","inputValue","isWithInput","_inputValue","String","replace","trim","_caption","_toItem","item","_crWidth","width","style","indexOf","S","BLOCK","display","NONE","ARROW_SHOW","borderColor","ItemOptionDf","InputSelect","props","domOptionsCache","indexActiveOption","optionName","optionNames","options","state","value","isShowOption","isValidDomOptionsCache","isLocalMode","nextProps","_setStateToInit","nextState","comp","_getActiveItemComp","_decorateActiveRowComp","_makeVisibleActiveRowComp","rootStyle","_rootWidthStyle","_crAfterInputEl","afterInputEl","placeholder","_domOptions","renderOptions","_refDomInputText","_handleInputChange","_handleInputKeyDown","domInputText","focus","Component","defaultProps","ItemOptionComp","onSelect","onLoadOption","setState","classList","add","indexNode","textContent","_undecorateActiveRowComp","_comp","remove","offsetTop","scrollTop","optionsComp","_filterOptions","valueFor","toLowerCase","filter","option","i","event","target","tokenLn","token","length","valueLn","arr","push","_startAfterInputAnimation","arrowCell","startAnimation","_stopAfterInputAnimation","stopAnimation","_setShowOptions","_showOptions","ms","isShowOptionAnim","setTimeout","_stepDownOption","prevComp","nextComp","_stepUpOption","bottomComp","keyCode","undefined","preventDefault","_handleToggleOptions","_handleClickItem","index","_refIndexNode","n","_renderOptionsFooter","nFiltered","nAll","clearInput","_refOptionsComp","c","rootOptionsStyle","_propCaption","map","bind","_styleOptions","_nFiltered","_nAll","_refArrowCell","isLoading","isLoadingFailed","_placeholder","_afterInputEl","_arrowStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;;;AAGA;;;;AAEA;;;;;;AAEA,IAAMA,wBAAwB,GAA9B;;AAEA,IAAMC,UAAU,YAAhB;AACA,IAAMC,KAAK;AACTC,QAAMF,OADG;AAETG,SAAUH,OAAV,YAFS;AAGTI,WAAYJ,OAAZ,cAHS;AAITK,kBAAmBL,OAAnB,sBAJS;AAKTM,YAAaN,OAAb,gBALS;;AAOTO,WAAYP,OAAZ,cAPS;AAQTQ,eAAgBR,OAAhB,mBARS;;AAUTS,eAAgBT,OAAhB,UAVS;AAWTU,sBAAuBV,OAAvB,kBAXS;;AAaTW,UAAWX,OAAX,aAbS;AAcTY,gBAAiBZ,OAAjB,oBAdS;AAeTa,cAAeb,OAAf,kBAfS;AAgBTc,iBAAkBd,OAAlB,qBAhBS;;AAkBTe,gBAAc;AAlBL,CAAX;;AAsBA,IAAMC,eAAe,aAArB;AACA,IAAMC,YAAY,SAAZA,SAAY,CAACC,WAAD,EAAcC,UAAd,EAA0BC,WAA1B,EAA0C;AAAA;;AAC1D,MAAMC,cAAcC,OAAOH,UAAP,EACjBI,OADiB,CACTP,YADS,EACI,EADJ,EACQQ,IADR,EAApB;AAAA,MAEIC,WAAYL,WAAD,GACDJ,YADC,SACeK,WADf,GAEJ,kBAJX;AAKA,wDACGH,WADH,EACiBO,QADjB,gDAES,UAFT,qDAGcJ,WAHd;AAKD,CAXD;;AAaA,IAAMK,UAAU,SAAVA,OAAU,CAACC,IAAD,EAAOT,WAAP;AAAA;;AAAA,0DACbA,WADa,EACC,YADD,iDAEPS,KAAKR,UAFE;AAAA,CAAhB;;AAKA,IAAMS,WAAW,SAAXA,QAAW,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACjC,SAAQD,KAAD,GACF,CAAC,KAAGA,KAAJ,EAAWE,OAAX,CAAmB,GAAnB,MAA4B,CAAC,CAA9B,8BACSD,KADT,IACgBD,OAAOA,KADvB,iCAESC,KAFT,IAEgBD,OAAOA,QAAQ,IAF/B,GADG,GAIH,IAJJ;AAKD,CAND;;AAQA,IAAMG,IAAI;AACRC,SAAO;AACLC,aAAS;AADJ,GADC;AAIRC,QAAM;AACJD,aAAS;AADL,GAJE;;AAQRE,cAAY;AACVC,iBAAa;AADH;AARJ,CAAV;;AAaA,IAAMC,eAAe,SAAfA,YAAe;AAAA,MAAGX,IAAH,SAAGA,IAAH;AAAA,MAAST,WAAT,SAASA,WAAT;AAAA,SACnB;AAAA;AAAA;AACGS,SAAKT,WAAL;AADH,GADmB;AAAA,CAArB;;IAMMqB,W;;;AAwCJ,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA,wIACVA,KADU;;AAAA;;AAEhB,UAAKC,eAAL,GAAuB,IAAvB;AACA,UAAKC,iBAAL,GAAyB,CAAzB;AACA,UAAKxB,WAAL,GAAmBsB,MAAMtB,WAAzB;;AAJgB,QAMRyB,UANQ,GAM6BH,KAN7B,CAMRG,UANQ;AAAA,QAMIC,WANJ,GAM6BJ,KAN7B,CAMII,WANJ;AAAA,QAMiBC,OANjB,GAM6BL,KAN7B,CAMiBK,OANjB;;AAOhB,UAAKC,KAAL,GAAa;AACXC,aAAO,EADI;AAEXC,oBAAc,KAFH;AAGXH,eAASA,OAHE;AAIXD,mBAAaA,eAAeD,UAAf,IAA6B,EAJ/B;AAKXM,8BAAwB,KALb;AAMXC,mBAAa;AANF,KAAb;AAPgB;AAejB;AAtDD;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAwD0BC,S,EAAU;AAClC,UAAI,KAAKX,KAAL,KAAeW,SAAnB,EAA6B;AAC3B,YAAI,KAAKX,KAAL,CAAWK,OAAX,KAAuBM,UAAUN,OAArC,EAA6C;AAC3C;AACA,eAAKO,eAAL,CAAqBD,UAAUN,OAA/B;AACD;AACF;AACF;;;0CAEqBM,S,EAAWE,S,EAAU;AACzC,UAAI,KAAKb,KAAL,KAAeW,SAAnB,EAA8B;AAC5BE,kBAAUH,WAAV,GAAwB,KAAxB;AACD,OAFD,MAEO;AACLG,kBAAUH,WAAV,GAAwB,IAAxB;AACD;;AAED,aAAO,IAAP;AACD;;;yCAEmB;AACjB;AACA,UAAI,KAAKJ,KAAL,CAAWE,YAAf,EAA4B;AAC1B,YAAMM,OAAO,KAAKC,kBAAL,EAAb;AACA,aAAKC,sBAAL,CAA4BF,IAA5B;AACA,aAAKG,yBAAL,CAA+BH,IAA/B;AACF;AACF;;;6BAoXO;AAAA,mBACuB,KAAKd,KAD5B;AAAA,UACEkB,SADF,UACEA,SADF;AAAA,UACa7B,KADb,UACaA,KADb;AAAA,mBAEuC,KAAKiB,KAF5C;AAAA,UAEEC,KAFF,UAEEA,KAFF;AAAA,UAESG,WAFT,UAESA,WAFT;AAAA,UAEsBF,YAFtB,UAEsBA,YAFtB;AAAA,UAGAW,eAHA,GAGkB/B,SAASC,KAAT,EAAgB6B,SAAhB,CAHlB;AAAA,4BAIgC,KAAKE,eAAL,EAJhC;AAAA,UAIEC,YAJF,mBAIEA,YAJF;AAAA,UAIgBC,WAJhB,mBAIgBA,WAJhB;AAAA,UAKAC,WALA,GAKeb,eAAeF,YAAhB,GACR,KAAKgB,aAAL,EADQ,GAER,IAPN;;AAQN,aACE;AAAA;AAAA;AACE,qBAAW/D,GAAGC,IADhB;AAEE,iBAAOyD;AAFT;AAIE;AACG,eAAK,KAAKM,gBADb;AAEG,gBAAK,MAFR;AAGG,gBAAK;AACL;AAJH,YAKG,cAAa,KALhB;AAMG,uBAAY,KANf;AAOG,0BAAe,KAPlB;AAQG,sBAAY,KARf;AASG,iBAAOlB,KATV;AAUG,qBAAW9C,GAAGE,KAVjB;AAWG,uBAAa2D,WAXhB;AAYG,oBAAU,KAAKI,kBAZlB;AAaG,qBAAW,KAAKC,mBAbnB,GAJF;AAmBGN,oBAnBH;AAoBE,8CAAI,WAAW5D,GAAGK,QAAlB,GApBF;AAqBGyD;AArBH,OADF;AAyBD;;;iCAUW;AACV,WAAKK,YAAL,CAAkBC,KAAlB;AACD;;;yCACmB;AAClB,WAAKD,YAAL,CAAkBC,KAAlB;AACD;;;EAvfuBC,gB,UA4BjBC,Y,GAAe;AACpBrD,eAAa,SADO;AAEpBsD,kBAAgBlC,YAFI;AAGpBO,WAAS,EAHW;AAIpBF,cAAY,EAJQ;AAKpBC,eAAa,EALO;AAMpBxB,eAAa,KANO;AAOpB;AACAqD,YAAU,oBAAM,CAAE,CARE;AASpBC,gBAAc,wBAAM,CAAE;AATF,C;;;OAyDtBtB,e,GAAkB,UAACP,OAAD,EAAa;AAC7B,WAAKH,iBAAL,GAAyB,CAAzB;AACA,WAAKiC,QAAL,CAAc;AACZ5B,aAAQ,EADI;AAEZC,oBAAe,KAFH;AAGZH,eAAUA,OAHE;AAIZI,8BAAyB;AAJb,KAAd;AAMD,G;;OAEDM,kB,GAAqB,YAAM;AACzB,WAAO,aAAS,OAAKb,iBAAd,CAAP;AACD,G;;OACDc,sB,GAAyB,UAACF,IAAD,EAAU;AACjC,QAAIA,IAAJ,EAAS;AACPA,WAAKsB,SAAL,CAAeC,GAAf,CAAmB5E,GAAGS,kBAAtB;AACD;AACD,QAAI,OAAKoE,SAAT,EAAoB;AAClB,aAAKA,SAAL,CAAeC,WAAf,GAA6B,OAAKrC,iBAAL,GAAyB,CAAtD;AACD;AACF,G;;OACDsC,wB,GAA2B,UAAC1B,IAAD,EAAU;AAClC,QAAM2B,QAAQ,CAAC3B,IAAD,GACH,OAAKC,kBAAL,EADG,GAEHD,IAFX;AAGA,QAAI2B,KAAJ,EAAU;AACTA,YAAML,SAAN,CAAgBM,MAAhB,CAAuBjF,GAAGS,kBAA1B;AACA;AACH,G;;OAED+C,yB,GAA4B,UAACH,IAAD,EAAU;AACpC,QAAIA,IAAJ,EAAS;AACP,UAAM6B,YAAY7B,KAAK6B,SAAvB;AACA,UAAMC,YAAY,OAAKC,WAAL,CAAiBD,SAAnC;AACA,UAAMD,YAAYC,SAAb,GAA0B,EAA/B,EAAkC;AAC/B,eAAKC,WAAL,CAAiBD,SAAjB,IAA+BD,YAAYC,SAAZ,GAAwB,EAAvD;AACF;AACD,UAAMD,YAAYC,SAAb,GAA0B,CAA/B,EAAiC;AAC/B,eAAKC,WAAL,CAAiBD,SAAjB,GAA4B,CAA5B;AACD;AACF;AACF,G;;OAEDE,c,GAAiB,UAACzC,OAAD,EAAUE,KAAV,EAAoB;AAClC,QAAMwC,WAAWxC,MAAMyC,WAAN,EAAjB;AAAA,QACM/D,WAAW,OAAKP,WADtB;AAEA,WAAO2B,QAAQ4C,MAAR,CAAgB,UAACC,MAAD,EAASC,CAAT,EAAe;AACpC,aAAOD,OAAOjE,QAAP,EAAiB+D,WAAjB,GAA+BzD,OAA/B,CAAuCwD,QAAvC,MAAqD,CAAC,CAA7D;AACD,KAFM,CAAP;AAGF,G;;OAEDrB,kB,GAAqB,UAAC0B,KAAD,EAAW;AACxB,gBAAQA,MAAMC,MAAN,CAAa9C,KAArB;AAAA,QACA+C,OADA,GACUC,MAAMC,MADhB;AAAA,QAEEjD,KAFF,GAEY,OAAKD,KAFjB,CAEEC,KAFF;AAAA,QAGAkD,OAHA,GAGUlD,MAAMiD,MAHhB;;AAIN,QAAIE,MAAM,EAAV;AACA,QAAIJ,YAAYG,OAAhB,EAAwB;AACtB,UAAIH,UAAUG,OAAd,EAAsB;AACpBC,cAAM,OAAKZ,cAAL,CAAoB,OAAKxC,KAAL,CAAWD,OAA/B,EAAwCkD,KAAxC,CAAN;AACD,OAFD,MAEO,IAAID,UAAUG,OAAd,EAAuB;AAC5BC,cAAM,OAAKZ,cAAL,CAAoB,OAAK9C,KAAL,CAAWK,OAA/B,EAAwCkD,KAAxC,CAAN;AACD;AACD,UAAIG,IAAIF,MAAJ,KAAe,CAAnB,EAAqB;AACnBE,YAAIC,IAAJ,CAASlF,UACP,OAAKC,WADE,EACW6E,KADX,EACkB,OAAKvD,KAAL,CAAWpB,WAD7B,CAAT;AAGD;AACD,aAAK4D,wBAAL;AACA,aAAKtC,iBAAL,GAAyB,CAAzB;AACA,aAAKiC,QAAL,CAAc;AACZ5B,eAAQgD,KADI;AAEZ/C,sBAAe,IAFH;AAGZC,gCAAyB,KAHb;AAIZJ,iBAAUqD;AAJE,OAAd;AAMD;AACF,G;;OAEDE,yB,GAA4B,YAAM;AAChC,QAAI,OAAKtD,KAAL,CAAWD,OAAX,CAAmBmD,MAAnB,GAA0BjG,qBAA9B,EAAoD;AAClD,aAAKsG,SAAL,CAAeC,cAAf;AACD;AACF,G;;OACDC,wB,GAA2B,YAAM;AAC/B,WAAKF,SAAL,CAAeG,aAAf;AACD,G;;OACDC,e,GAAkB,YAAM;AACtB,WAAK9B,QAAL,CACE,EAAE3B,cAAe,IAAjB,EADF,EAEE,OAAKuD,wBAFP;AAID,G;;OACDG,Y,GAAe,UAACC,EAAD,EAAQ;AACrB,QAAI,OAAKnE,KAAL,CAAWoE,gBAAf,EAAiC;AAC/B,aAAKR,yBAAL;AACAS,iBAAY,OAAKJ,eAAjB,EAAkCE,EAAlC;AACD,KAHD,MAGO;AACL,aAAKhC,QAAL,CAAc,EAAE3B,cAAc,IAAhB,EAAd;AACD;AACF,G;;OAED8D,e,GAAkB,YAAM;AACtB,QAAMC,WAAW,OAAKxD,kBAAL,EAAjB;;AAEA,QAAIwD,QAAJ,EAAa;AACV,aAAK/B,wBAAL,CAA8B+B,QAA9B;;AAEA,aAAKrE,iBAAL,IAA0B,CAA1B;AACA,UAAI,OAAKA,iBAAL,IAAwB,OAAKI,KAAL,CAAWD,OAAX,CAAmBmD,MAA/C,EAAsD;AACnD,eAAKtD,iBAAL,GAAyB,CAAzB;AACA,eAAK2C,WAAL,CAAiBD,SAAjB,GAA6B,CAA7B;AACF;;AAED,UAAM4B,WAAW,OAAKzD,kBAAL,EAAjB;AACA,aAAKC,sBAAL,CAA4BwD,QAA5B;AACA;;AAEA,UAAM7B,YAAY6B,SAAS7B,SAA3B;AACA,UAAMC,YAAY,OAAKC,WAAL,CAAiBD,SAAnC;AACA,UAAMD,YAAYC,SAAb,GAA0B,EAA/B,EAAkC;AAC/B,eAAKC,WAAL,CAAiBD,SAAjB,IAA+BD,YAAYC,SAAZ,GAAwB,EAAvD;AACF;AACH;AACF,G;;OAED6B,a,GAAgB,YAAM;AACpB,QAAMF,WAAW,OAAKxD,kBAAL,EAAjB;AACA,QAAIwD,QAAJ,EAAa;AACX,aAAK/B,wBAAL,CAA8B+B,QAA9B;;AAEA,aAAKrE,iBAAL,IAA0B,CAA1B;AACA,UAAI,OAAKA,iBAAL,GAAyB,CAA7B,EAA+B;AAC7B,eAAKA,iBAAL,GAAyB,OAAKI,KAAL,CAAWD,OAAX,CAAmBmD,MAAnB,GAA4B,CAArD;AACA,YAAMkB,aAAa,OAAK3D,kBAAL,EAAnB;AACA,eAAK8B,WAAL,CAAiBD,SAAjB,GAA6B8B,WAAW/B,SAAxC;AACD;;AAED,UAAM6B,WAAW,OAAKzD,kBAAL,EAAjB;AACA,aAAKC,sBAAL,CAA4BwD,QAA5B;AACA;;AAEA,UAAM7B,YAAY6B,SAAS7B,SAA3B;AACA,UAAMC,YAAY,OAAKC,WAAL,CAAiBD,SAAnC;AACA,UAAMD,YAAYC,SAAb,GAA0B,EAA/B,EAAkC;AAChC,eAAKC,WAAL,CAAiBD,SAAjB,IAAgC,MAAMD,YAAYC,SAAlB,CAAhC;AACD;AACF;AACF,G;;OAEDjB,mB,GAAsB,UAACyB,KAAD,EAAW;AAC/B,YAAOA,MAAMuB,OAAb;AACE;AACA,WAAK,EAAL;AAAQ;AACL,cAAMxF,OAAO,OAAKmB,KAAL,CAAWD,OAAX,CAAmB,OAAKH,iBAAxB,CAAb;;AAEA,cAAIf,QAAQA,KAAK,OAAKT,WAAV,CAAZ,EAAmC;AACjC,mBAAKyD,QAAL,CAAc;AACZ5B,qBAAQpB,KAAK,OAAKT,WAAV,CADI;AAEZ8B,4BAAe,KAFH;AAGZC,sCAAyB;AAHb,aAAd;;AAMA,gBAAItB,KAAKoB,KAAL,KAAe,UAAnB,EAA8B;AAC5B,qBAAKP,KAAL,CAAWiC,QAAX,CAAoB9C,IAApB;AACD,aAFD,MAEO;AACL,kBAAI,CAAC,OAAKa,KAAL,CAAWpB,WAAhB,EAA6B;AAC1B,uBAAKoB,KAAL,CAAWiC,QAAX,CAAoB2C,SAApB;AACF,eAFD,MAEO;AACL,uBAAK5E,KAAL,CAAWiC,QAAX,CAAoB/C,QAAQC,IAAR,EAAc,OAAKT,WAAnB,CAApB;AACD;AACF;AACF;AACJ;AAAQ;AACR;AACA,WAAK,EAAL,CAAS,KAAK,EAAL;AAAS;AAChB0E,gBAAMyB,cAAN;AACA,cAAI,OAAKvE,KAAL,CAAWE,YAAf,EAA4B;AAC1B,mBAAK2B,QAAL,CAAc,EAAE3B,cAAe,KAAjB,EAAd;AACD,WAFD,MAEO;AACL,mBAAKgC,wBAAL;AACA,mBAAK5B,eAAL,CAAqB,OAAKZ,KAAL,CAAWK,OAAhC;AACA,mBAAKL,KAAL,CAAWiC,QAAX,CAAoB2C,SAApB;AACD;AACH;AAAO;AACP,WAAK,EAAL;AAAS;AACP,YAAI,CAAC,OAAKtE,KAAL,CAAWE,YAAhB,EAA6B;AAC3B,iBAAK0D,YAAL,CAAkB,CAAlB;AACA;AACD,SAHD,MAGO;AACLd,gBAAMyB,cAAN;AACA,iBAAKP,eAAL;AACD;AACD;AACF,WAAK,EAAL;AAAS;AACP,YAAI,OAAKhE,KAAL,CAAWE,YAAf,EAA4B;AAC1B4C,gBAAMyB,cAAN;AACA,iBAAKJ,aAAL;AACD;AACD;AACF;AAAS,eAAOG,SAAP;AAjDX;AAmDD,G;;OAEDE,oB,GAAuB,YAAM;AAC3B;AACA,QAAI,OAAKxE,KAAL,CAAWE,YAAf,EAA4B;AAC1B,aAAK2B,QAAL,CAAc,EAAE3B,cAAc,KAAhB,EAAd;AACD,KAFD,MAEO;AACL,aAAK0D,YAAL,CAAkB,CAAlB;AACD;AACF,G;;OAEDa,gB,GAAmB,UAAC5F,IAAD,EAAO6F,KAAP,EAAc5B,KAAd,EAAwB;AACzC,WAAKZ,wBAAL;AACA,WAAKtC,iBAAL,GAAyB8E,KAAzB;AACA,WAAK7C,QAAL,CAAc;AACZ5B,aAAQpB,KAAK,OAAKT,WAAV,CADI;AAEZ8B,oBAAe;AAFH,KAAd;AAIA,WAAKR,KAAL,CAAWiC,QAAX,CAAoB9C,IAApB;AACD,G;;OAED8F,a,GAAgB;AAAA,WAAK,OAAK3C,SAAL,GAAiB4C,CAAtB;AAAA,G;;OAEhBC,oB,GAAuB,UAACC,SAAD,EAAYC,IAAZ,EAAqB;AAC1C,WACE;AAAA;AAAA,QAAK,WAAc5H,GAAGU,MAAjB,SAA2BV,GAAGc,YAAnC;AACE;AAAA;AAAA,UAAM,WAAWd,GAAGW,YAApB;AACE;AAAA;AAAA,YAAM,KAAK,OAAK6G,aAAhB;AACG,iBAAK/E;AADR,SADF;AAIE;AAAA;AAAA;AAAA;AACMkF,mBADN;AAAA;AACmBC;AADnB;AAJF,OADF;AASE;AAAA;AAAA,UAAM,WAAW5H,GAAGY,UAApB;AACE,sCAAC,sBAAD;AACG,qBAAWZ,GAAGa,aADjB;AAEG,mBAAQ,IAFX;AAGG,mBAAS,OAAKgG;AAHjB,UADF;AAME,sCAAC,sBAAD;AACG,qBAAW7G,GAAGa,aADjB;AAEG,mBAAQ,IAFX;AAGG,mBAAS,OAAKmG;AAHjB,UANF;AAWE,sCAAC,sBAAD;AACG,mBAAQ,IADX;AAEG,mBAAS,OAAKa;AAFjB;AAXF;AATF,KADF;AA4BD,G;;OAEDC,e,GAAkB;AAAA,WAAK,OAAK1C,WAAL,GAAmB2C,CAAxB;AAAA,G;;OAElBhE,a,GAAgB,YAAM;AAAA,kBAIV,OAAKxB,KAJK;AAAA,QAEZyF,gBAFY,WAEZA,gBAFY;AAAA,QAGZzD,cAHY,WAGZA,cAHY;AAAA,kBAKsC,OAAK1B,KAL3C;AAAA,QAKZE,YALY,WAKZA,YALY;AAAA,QAKEH,OALF,WAKEA,OALF;AAAA,QAKWI,sBALX,WAKWA,sBALX;AAAA,QAMdiF,YANc,GAMC,OAAKhH,WANN;;;AAQpB,QAAI6C,oBAAJ;AACA,QAAIlB,OAAJ,EAAY;AACV,UAAI,CAACI,sBAAL,EAA4B;AACzBc,sBAAclB,QAAQsF,GAAR,CAAY,UAACxG,IAAD,EAAO6F,KAAP,EAAe;AACvC,iBACE;AAAA;AAAA;AACG;AACA;AACA;AACA,mBAAKA,KAJR;AAKG,yBAAWvH,GAAGQ,WALjB;AAMG,mBAAK;AAAA,uBAAK,aAAS+G,KAAT,IAAoBQ,CAAzB;AAAA,eANR;AAOG,uBAAS,OAAKT,gBAAL,CAAsBa,IAAtB,CAA2B,MAA3B,EAAiCzG,IAAjC,EAAuC6F,KAAvC;AAPZ;AASG,0CAAC,cAAD;AACG,oBAAM7F,IADT;AAEG,2BAAauG;AAFhB;AATH,WADF;AAiBF,SAlBc,CAAd;AAmBD,eAAKzF,eAAL,GAAuBsB,WAAvB;AACD,OArBD,MAqBO;AACLA,sBAAc,OAAKtB,eAAnB;AACD;AACF;;AAEK,QAAEZ,KAAF,GAAY,OAAKW,KAAjB,CAAEX,KAAF;AAAA,QACCwG,aADD,GACiBrF,eAAehB,EAAEC,KAAjB,GAAyBD,EAAEG,IAD5C;AAAA,QAEAwB,eAFA,GAEkB/B,SAASC,KAAT,EAAgBwG,aAAhB,CAFlB;AAAA,QAGAC,UAHA,GAGczF,QAAQ,CAAR,KAAeA,QAAQ,CAAR,EAAWE,KAAX,KAAqB,UAArC,GACPF,QAAQmD,MADD,GACU,CAJvB;AAAA,QAKAuC,KALA,GAKQ,OAAK/F,KAAL,CAAWK,OAAX,GACF,OAAKL,KAAL,CAAWK,OAAX,CAAmBmD,MADjB,GAC0B,CANlC;;;AAQN,WACI;AAAA;AAAA;AACG,mBAAW/F,GAAGM,OADjB;AAEG,eAAOoD,eAFV;AAGG,2BAAiB;AAHpB;AAKE;AAAA;AAAA;AACG,eAAK,OAAKoE,eADb;AAEG,qBAAW9H,GAAGO,WAFjB;AAGG,4CAAWyH,gBAAX,EAAgCtE,eAAhC;AAHH;AAKGI;AALH,OALF;AAYI,aAAK4D,oBAAL,CAA0BW,UAA1B,EAAsCC,KAAtC;AAZJ,KADJ;AAgBD,G;;OAEDC,a,GAAgB;AAAA,WAAK,OAAKnC,SAAL,GAAiB2B,CAAtB;AAAA,G;;OAEhBpE,e,GAAkB,YAAM;AAAA,kBAIb,OAAKpB,KAJQ;AAAA,QAEfiG,SAFe,WAEfA,SAFe;AAAA,QAEJC,eAFI,WAEJA,eAFI;AAAA,QAGf5E,WAHe,WAGfA,WAHe;AAAA,QAGFnB,UAHE,WAGFA,UAHE;AAAA,QAGU+B,YAHV,WAGUA,YAHV;AAAA,kBAKgB,OAAK5B,KALrB;AAAA,QAKdE,YALc,WAKdA,YALc;AAAA,QAKAJ,WALA,WAKAA,WALA;;;AAOtB,QAAI+F,qBAAJ;AAAA,QAAkBC,sBAAlB;AACA,QAAI,CAACH,SAAD,IAAc,CAACC,eAAnB,EAAmC;AAChC,UAAMG,cAAc7F,eACThB,EAAEI,UADO,GAET,IAFX;AAGDuG,qBAAgB7E,WAAD,GACTA,WADS,eAECnB,UAFD,QAAf;AAGAiG,sBACG,8BAAC,mBAAD;AACE,aAAK,OAAKJ,aADZ;AAEE,oBAAYK,WAFd;AAGE,iBAAS,OAAKvB;AAHhB,QADH;AAOD,KAdD,MAcO,IAAImB,SAAJ,EAAc;AACnBE,kCAA0B/F,WAA1B;AACAgG,sBACE;AACE,mBAAW3I,GAAGG,OADhB;AAEE,uBAAY;AAFd,QADF;AAMD,KARM,MAQA,IAAIsI,eAAJ,EAAqB;AACzBC,kCAAwB/F,WAAxB;AACAgG,sBACE,8BAAC,sBAAD;AACE,mBAAW3I,GAAGI,cADhB;AAEE,uBAAY,eAFd;AAGE,iBAASqE;AAHX,QADF;AAOF;AACD,WAAO;AACLZ,mBAAa6E,YADR;AAEL9E,oBAAc+E;AAFT,KAAP;AAID,G;;OAED3E,gB,GAAmB;AAAA,WAAK,OAAKG,YAAL,GAAoB4D,CAAzB;AAAA,G;;OAqCnBF,U,GAAa,YAAM;AAAA,kBACa,OAAKtF,KADlB;AAAA,QACTK,OADS,WACTA,OADS;AAAA,QACA4B,QADA,WACAA,QADA;;AAEjB,WAAKO,wBAAL;AACAP,aAAS2C,SAAT;AACA,WAAKhE,eAAL,CAAqBP,OAArB;AACA,WAAK8B,QAAL,CAAc,EAAE3B,cAAe,KAAjB,EAAd;AACD,G;;kBAWYT,W","file":"InputSelect.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types'\r\n\r\nimport ArrowCell from './ArrowCell';\r\n\r\nimport BtCircle from '../zhn/ButtonCircle2'\r\n\r\nconst MAX_WITHOUT_ANIMATION = 800;\r\n\r\nconst CL_ROOT = 'zhn-select';\r\nconst CL = {\r\n  ROOT: CL_ROOT,\r\n  INPUT: `${CL_ROOT}__input`,\r\n  SPINNER: `${CL_ROOT}__spinner`,\r\n  SPINNER_FAILED: `${CL_ROOT}__spinner--failed`,\r\n  INPUT_HR: `${CL_ROOT}__input__hr`,\r\n\r\n  OPTIONS: `${CL_ROOT}__options`,\r\n  OPTIONS_DIV: `${CL_ROOT}__options__div`,\r\n\r\n  OPTIONS_ROW: `${CL_ROOT}__row`,\r\n  OPTIONS_ROW_ACTIVE: `${CL_ROOT}__row--active`,\r\n\r\n  FOOTER: `${CL_ROOT}__footer`,\r\n  FOOTER_INDEX: `${CL_ROOT}__footer__index`,\r\n  FOOTER_BTS: `${CL_ROOT}__footer__bts`,\r\n  FOOTER_MARGIN: `${CL_ROOT}__footer--margin`,\r\n\r\n  NOT_SELECTED: 'not-selected'\r\n};\r\n\r\n\r\nconst INPUT_PREFIX = 'From input:';\r\nconst _fnNoItem = (propCaption, inputValue, isWithInput) => {\r\n  const _inputValue = String(inputValue)\r\n    .replace(INPUT_PREFIX,'').trim()\r\n    , _caption = (isWithInput)\r\n           ? `${INPUT_PREFIX} ${_inputValue}`\r\n           : 'No results found';\r\n  return {\r\n    [propCaption]: _caption,\r\n    value: 'noresult',\r\n    inputValue: _inputValue\r\n  };\r\n};\r\n\r\nconst _toItem = (item, propCaption) => ({\r\n  [propCaption]: 'From Input',\r\n  value: item.inputValue\r\n});\r\n\r\nconst _crWidth = (width, style) => {\r\n  return (width)\r\n    ? ((''+width).indexOf('%') !== -1)\r\n        ? { ...style, width: width }\r\n        : { ...style, width: width + 'px'}\r\n    : null;\r\n};\r\n\r\nconst S = {\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  },\r\n\r\n  ARROW_SHOW: {\r\n    borderColor: '#1B75BB transparent transparent'\r\n  }\r\n};\r\n\r\nconst ItemOptionDf = ({ item, propCaption }) => (\r\n  <span>\r\n    {item[propCaption]}\r\n  </span>\r\n);\r\n\r\nclass InputSelect extends Component {\r\n  /*\r\n  static propTypes = {\r\n     propCaption: PropTypes.string,\r\n     ItemOptionComp: PropTypes.element,\r\n     width: PropTypes.string,\r\n     isShowOptionAnim: PropTypes.bool,\r\n     options: PropTypes.arrayOf(PropTypes.shape({\r\n        caption: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.number\r\n        ])\r\n     })),\r\n     optionName: PropTypes.string,\r\n     optionNames: PropTypes.string,\r\n     placeholder: PropTypes.string,\r\n     isWithInput: PropTypes.bool,\r\n     prefixInput: PropTypes.string\r\n\r\n     isLoading: PropTypes.bool,\r\n     isLoadingFailed: PropTypes.bool,\r\n\r\n     onSelect: PropTypes.func,\r\n     onLoadOption: PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    propCaption: 'caption',\r\n    ItemOptionComp: ItemOptionDf,\r\n    options: [],\r\n    optionName: '',\r\n    optionNames: '',\r\n    isWithInput: false,\r\n    //prefixInput: 'From Input:',\r\n    onSelect: () => {},\r\n    onLoadOption: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.domOptionsCache = null\r\n    this.indexActiveOption = 0\r\n    this.propCaption = props.propCaption\r\n\r\n    const { optionName, optionNames, options } = props;\r\n    this.state = {\r\n      value: '',\r\n      isShowOption: false,\r\n      options: options,\r\n      optionNames: optionNames || optionName || '',\r\n      isValidDomOptionsCache: false,\r\n      isLocalMode: false\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (this.props !== nextProps){\r\n      if (this.props.options !== nextProps.options){\r\n        //New options come from Parent - Clear domCache, Init State\r\n        this._setStateToInit(nextProps.options);\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps) {\r\n      nextState.isLocalMode = false;\r\n    } else {\r\n      nextState.isLocalMode = true;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate(){\r\n     //Decorate Active Option\r\n     if (this.state.isShowOption){\r\n       const comp = this._getActiveItemComp();\r\n       this._decorateActiveRowComp(comp);\r\n       this._makeVisibleActiveRowComp(comp);\r\n    }\r\n  }\r\n\r\n  _setStateToInit = (options) => {\r\n    this.indexActiveOption = 0;\r\n    this.setState({\r\n      value : '',\r\n      isShowOption : false,\r\n      options : options,\r\n      isValidDomOptionsCache : false\r\n    });\r\n  }\r\n\r\n  _getActiveItemComp = () => {\r\n    return this[`v${this.indexActiveOption}`];\r\n  }\r\n  _decorateActiveRowComp = (comp) => {\r\n    if (comp){\r\n      comp.classList.add(CL.OPTIONS_ROW_ACTIVE);\r\n    }\r\n    if (this.indexNode) {\r\n      this.indexNode.textContent = this.indexActiveOption + 1\r\n    }\r\n  }\r\n  _undecorateActiveRowComp = (comp) => {\r\n     const _comp = !comp\r\n              ? this._getActiveItemComp()\r\n              : comp;\r\n     if (_comp){\r\n      _comp.classList.remove(CL.OPTIONS_ROW_ACTIVE);\r\n     }\r\n  }\r\n\r\n  _makeVisibleActiveRowComp = (comp) => {\r\n    if (comp){\r\n      const offsetTop = comp.offsetTop;\r\n      const scrollTop = this.optionsComp.scrollTop;\r\n      if ( (offsetTop - scrollTop) > 70){\r\n         this.optionsComp.scrollTop += (offsetTop - scrollTop - 70);\r\n      }\r\n      if ( (offsetTop - scrollTop) < 0){\r\n        this.optionsComp.scrollTop= 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  _filterOptions = (options, value) => {\r\n     const valueFor = value.toLowerCase()\r\n        ,  _caption = this.propCaption;\r\n     return options.filter( (option, i) => {\r\n       return option[_caption].toLowerCase().indexOf(valueFor) !== -1\r\n     })\r\n  }\r\n\r\n  _handleInputChange = (event) => {\r\n    const token = event.target.value\r\n        , tokenLn = token.length\r\n        , { value } = this.state\r\n        , valueLn = value.length;\r\n    let arr = [];\r\n    if (tokenLn !== valueLn){\r\n      if (tokenLn > valueLn){\r\n        arr = this._filterOptions(this.state.options, token);\r\n      } else if (tokenLn < valueLn) {\r\n        arr = this._filterOptions(this.props.options, token);\r\n      }\r\n      if (arr.length === 0){\r\n        arr.push(_fnNoItem(\r\n          this.propCaption, token, this.props.isWithInput\r\n        ))\r\n      }\r\n      this._undecorateActiveRowComp()\r\n      this.indexActiveOption = 0;\r\n      this.setState({\r\n        value : token,\r\n        isShowOption : true,\r\n        isValidDomOptionsCache : false,\r\n        options : arr\r\n      })\r\n    }\r\n  }\r\n\r\n  _startAfterInputAnimation = () => {\r\n    if (this.state.options.length>MAX_WITHOUT_ANIMATION){\r\n      this.arrowCell.startAnimation()\r\n    }\r\n  }\r\n  _stopAfterInputAnimation = () => {\r\n    this.arrowCell.stopAnimation()\r\n  }\r\n  _setShowOptions = () => {\r\n    this.setState(\r\n      { isShowOption : true },\r\n      this._stopAfterInputAnimation\r\n    )\r\n  }\r\n  _showOptions = (ms) => {\r\n    if (this.props.isShowOptionAnim) {\r\n      this._startAfterInputAnimation()\r\n      setTimeout( this._setShowOptions, ms )\r\n    } else {\r\n      this.setState({ isShowOption: true })\r\n    }\r\n  }\r\n\r\n  _stepDownOption = () => {\r\n    const prevComp = this._getActiveItemComp();\r\n\r\n    if (prevComp){\r\n       this._undecorateActiveRowComp(prevComp);\r\n\r\n       this.indexActiveOption += 1;\r\n       if (this.indexActiveOption>=this.state.options.length){\r\n          this.indexActiveOption = 0;\r\n          this.optionsComp.scrollTop = 0;\r\n       }\r\n\r\n       const nextComp = this._getActiveItemComp();\r\n       this._decorateActiveRowComp(nextComp)\r\n       //this.indexNode.innerHTML = this.indexActiveOption\r\n\r\n       const offsetTop = nextComp.offsetTop\r\n       const scrollTop = this.optionsComp.scrollTop;\r\n       if ( (offsetTop - scrollTop) > 70){\r\n          this.optionsComp.scrollTop += (offsetTop - scrollTop - 70);\r\n       }\r\n    }\r\n  }\r\n\r\n  _stepUpOption = () => {\r\n    const prevComp = this._getActiveItemComp();\r\n    if (prevComp){\r\n      this._undecorateActiveRowComp(prevComp);\r\n\r\n      this.indexActiveOption -= 1;\r\n      if (this.indexActiveOption < 0){\r\n        this.indexActiveOption = this.state.options.length - 1;\r\n        const bottomComp = this._getActiveItemComp()\r\n        this.optionsComp.scrollTop = bottomComp.offsetTop\r\n      }\r\n\r\n      const nextComp = this._getActiveItemComp();\r\n      this._decorateActiveRowComp(nextComp);\r\n      //this.indexNode.innerHTML = this.indexActiveOption\r\n\r\n      const offsetTop = nextComp.offsetTop;\r\n      const scrollTop = this.optionsComp.scrollTop;\r\n      if ( (offsetTop - scrollTop) < 70){\r\n        this.optionsComp.scrollTop -= ( 70 - (offsetTop - scrollTop) );\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleInputKeyDown = (event) => {\r\n    switch(event.keyCode){\r\n      // enter\r\n      case 13:{\r\n         const item = this.state.options[this.indexActiveOption];\r\n\r\n         if (item && item[this.propCaption]){\r\n           this.setState({\r\n             value : item[this.propCaption],\r\n             isShowOption : false,\r\n             isValidDomOptionsCache : true\r\n           });\r\n\r\n           if (item.value !== 'noresult'){\r\n             this.props.onSelect(item);\r\n           } else {\r\n             if (!this.props.isWithInput) {\r\n                this.props.onSelect(undefined);\r\n             } else {\r\n               this.props.onSelect(_toItem(item, this.propCaption))\r\n             }\r\n           }\r\n         }\r\n      break; }\r\n      //escape, delete\r\n      case 27: case 46: {\r\n        event.preventDefault()\r\n        if (this.state.isShowOption){\r\n          this.setState({ isShowOption : false });\r\n        } else {\r\n          this._undecorateActiveRowComp();\r\n          this._setStateToInit(this.props.options);\r\n          this.props.onSelect(undefined);\r\n        }\r\n      break;}\r\n      case 40: //down\r\n        if (!this.state.isShowOption){\r\n          this._showOptions(0)\r\n          //this.setState({ isShowOption : true });\r\n        } else {\r\n          event.preventDefault()\r\n          this._stepDownOption()\r\n        }\r\n        break;\r\n      case 38: //up\r\n        if (this.state.isShowOption){\r\n          event.preventDefault()\r\n          this._stepUpOption()\r\n        }\r\n        break;\r\n      default: return undefined;\r\n    }\r\n  }\r\n\r\n  _handleToggleOptions = () => {\r\n    //this.setState({ isShowOption: !this.state.isShowOption });\r\n    if (this.state.isShowOption){\r\n      this.setState({ isShowOption: false })\r\n    } else {\r\n      this._showOptions(1)\r\n    }\r\n  }\r\n\r\n  _handleClickItem = (item, index, event) => {\r\n    this._undecorateActiveRowComp()\r\n    this.indexActiveOption = index;\r\n    this.setState({\r\n      value : item[this.propCaption],\r\n      isShowOption : false\r\n    });\r\n    this.props.onSelect(item);\r\n  }\r\n\r\n  _refIndexNode = n => this.indexNode = n\r\n\r\n  _renderOptionsFooter = (nFiltered, nAll) => {\r\n    return (\r\n      <div className={`${CL.FOOTER} ${CL.NOT_SELECTED}`}>\r\n        <span className={CL.FOOTER_INDEX}>\r\n          <span ref={this._refIndexNode} >\r\n            {this.indexActiveOption}\r\n          </span>\r\n          <span>\r\n             : {nFiltered}: {nAll}\r\n          </span>\r\n        </span>\r\n        <span className={CL.FOOTER_BTS}>\r\n          <BtCircle\r\n             className={CL.FOOTER_MARGIN}\r\n             caption=\"Dn\"\r\n             onClick={this._stepDownOption}\r\n          />\r\n          <BtCircle\r\n             className={CL.FOOTER_MARGIN}\r\n             caption=\"Up\"\r\n             onClick={this._stepUpOption}\r\n          />\r\n          <BtCircle\r\n             caption=\"CL\"\r\n             onClick={this.clearInput}\r\n          />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _refOptionsComp = c => this.optionsComp = c\r\n\r\n  renderOptions = () => {\r\n    const {\r\n            rootOptionsStyle,\r\n            ItemOptionComp\r\n          } = this.props\r\n        , { isShowOption, options, isValidDomOptionsCache } = this.state\r\n        , _propCaption = this.propCaption;\r\n\r\n    let _domOptions;\r\n    if (options){\r\n      if (!isValidDomOptionsCache){\r\n         _domOptions = options.map((item, index)=>{\r\n           return (\r\n             <div\r\n                //role=\"option\"\r\n                //aria-selected={this.indexActiveOption === index}\r\n                //tabIndex=\"0\"\r\n                key={index}\r\n                className={CL.OPTIONS_ROW}\r\n                ref={c => this[`v${index}`] = c}\r\n                onClick={this._handleClickItem.bind(this, item, index)}\r\n              >\r\n                <ItemOptionComp\r\n                   item={item}\r\n                   propCaption={_propCaption}\r\n                />\r\n                {/*item.caption*/}\r\n            </div>\r\n           )\r\n        });\r\n        this.domOptionsCache = _domOptions;\r\n      } else {\r\n        _domOptions = this.domOptionsCache;\r\n      }\r\n    }\r\n\r\n    const { width } = this.props\r\n        ,  _styleOptions = isShowOption ? S.BLOCK : S.NONE\r\n        , _rootWidthStyle = _crWidth(width, _styleOptions)\r\n        , _nFiltered = (options[0] && (options[0].value !== 'noresult') )\r\n              ? options.length : 0\r\n        , _nAll = this.props.options\r\n              ? this.props.options.length : 0;\r\n\r\n    return (\r\n        <div\r\n           className={CL.OPTIONS}\r\n           style={_rootWidthStyle}\r\n           data-scrollable={true}\r\n         >\r\n          <div\r\n             ref={this._refOptionsComp}\r\n             className={CL.OPTIONS_DIV}\r\n             style={{...rootOptionsStyle, ..._rootWidthStyle}}\r\n           >\r\n            {_domOptions}\r\n          </div>\r\n          { this._renderOptionsFooter(_nFiltered, _nAll) }\r\n        </div>\r\n    );\r\n  }\r\n\r\n  _refArrowCell = c => this.arrowCell = c\r\n\r\n  _crAfterInputEl = () => {\r\n    const {\r\n           isLoading, isLoadingFailed,\r\n           placeholder, optionName, onLoadOption\r\n         } = this.props\r\n        , { isShowOption, optionNames } = this.state;\r\n\r\n    let _placeholder, _afterInputEl\r\n    if (!isLoading && !isLoadingFailed){\r\n       const _arrowStyle = isShowOption\r\n                ? S.ARROW_SHOW\r\n                : null;\r\n      _placeholder = (placeholder)\r\n          ? placeholder\r\n          : `Select ${optionName}...`;\r\n      _afterInputEl = (\r\n         <ArrowCell\r\n           ref={this._refArrowCell}\r\n           arrowStyle={_arrowStyle}\r\n           onClick={this._handleToggleOptions}\r\n         />\r\n      );\r\n    } else if (isLoading){\r\n      _placeholder = `Loading ${optionNames}...`;\r\n      _afterInputEl = (\r\n        <span\r\n          className={CL.SPINNER}\r\n          data-loader=\"circle\"\r\n        />        \r\n      );\r\n    } else if (isLoadingFailed) {\r\n       _placeholder=`Loading ${optionNames} Failed`;\r\n       _afterInputEl = (\r\n         <BtCircle\r\n           className={CL.SPINNER_FAILED}\r\n           data-loader=\"circle-failed\"\r\n           onClick={onLoadOption}\r\n         />\r\n       )\r\n    }\r\n    return {\r\n      placeholder: _placeholder,\r\n      afterInputEl: _afterInputEl\r\n    };\r\n  }\r\n\r\n  _refDomInputText = c => this.domInputText = c\r\n\r\n  render(){\r\n    const { rootStyle, width } = this.props\r\n        , { value, isLocalMode, isShowOption } = this.state\r\n        , _rootWidthStyle = _crWidth(width, rootStyle)\r\n        , { afterInputEl, placeholder } = this._crAfterInputEl()\r\n        , _domOptions = (isLocalMode || isShowOption)\r\n              ? this.renderOptions()\r\n              : null;\r\n    return (\r\n      <div\r\n        className={CL.ROOT}\r\n        style={_rootWidthStyle}\r\n      >\r\n        <input\r\n           ref={this._refDomInputText}\r\n           type=\"text\"\r\n           name=\"select\"\r\n           //autoComplete=\"new-select\"\r\n           autoComplete=\"off\"\r\n           autoCorrect=\"off\"\r\n           autoCapitalize=\"off\"\r\n           spellCheck={false}\r\n           value={value}\r\n           className={CL.INPUT}\r\n           placeholder={placeholder}\r\n           onChange={this._handleInputChange}\r\n           onKeyDown={this._handleInputKeyDown}>\r\n        </input>\r\n        {afterInputEl}\r\n        <hr className={CL.INPUT_HR} />\r\n        {_domOptions}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  clearInput = () => {\r\n    const { options, onSelect } = this.props;\r\n    this._undecorateActiveRowComp()\r\n    onSelect(undefined)\r\n    this._setStateToInit(options)\r\n    this.setState({ isShowOption : false });\r\n  }\r\n\r\n  focusInput(){\r\n    this.domInputText.focus()\r\n  }\r\n  focusNotValidInput(){\r\n    this.domInputText.focus()\r\n  }\r\n\r\n}\r\n\r\nexport default InputSelect\r\n"]}