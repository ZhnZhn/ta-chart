{"version":3,"sources":["../../../src/components/zhn-slider/CompSlider.jsx"],"names":["PERIOD_MS","S","SHOW_HIDE","position","overflow","PAGES","display","flexFlow","alignItems","overflowX","transition","_getTranslateX","parseInt","node","style","transform","substr","replace","_findIndexById","arr","id","findIndex","el","key","_replaceElTo2","index","splice","slice","_addElTo2","ModalSlider","props","_crPageElement","React","createElement","pageRouter","_pageStyle","onPrevPage","hPrevPage","onNextPage","hNextPage","setState","prevState","pageCurrent","_direction","pages","_pageIndex","_crTransform","pagesEl","_refPages","current","WIDTH","_PAGE_WIDTH","dX","prevInt","_renderPages","state","map","Page","cloneElement","pageNumber","pageWidth","maxPages","initialPageId","createRef","bind","_pagesStyle","width","_transform","_divStyle","Component","defaultProps"],"mappings":"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","file":"CompSlider.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport throttleOnce from '../../utils/throttleOnce'\r\n\r\nconst PERIOD_MS = 750;\r\n\r\nconst S = {\r\n  SHOW_HIDE: {\r\n    position: 'absolute',\r\n    overflow: 'hidden'\r\n  },\r\n  PAGES: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    alignItems: 'flex-start',\r\n    overflowX: 'hidden',\r\n    transition: `all ${PERIOD_MS}ms ease-out`\r\n  }\r\n};\r\n\r\nconst _getTranslateX = node => parseInt(node\r\n .style.transform\r\n    .substr(11)\r\n    .replace('px', '')\r\n    .replace(')', ''),\r\n 10);\r\n\r\nconst _findIndexById = (arr, id) => arr\r\n  .findIndex(el => el.key === id);\r\nconst _replaceElTo2 = (arr, index) => [\r\n  arr[0], arr.splice(index, 1)[0], ...arr.slice(1)\r\n];\r\nconst _addElTo2 = (arr, el) => [\r\n  arr[0], el, ...arr.slice(1)\r\n];\r\n\r\nclass ModalSlider extends Component {\r\n  /*\r\n  static propTypes = {\r\n    rootStyle: PropTypes.object,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n\r\n    pageWidth: PropTypes.number,\r\n    maxPages: PropTypes.number,\r\n\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    pageWidth: 330,\r\n    maxPages: 3\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    const {\r\n      pageWidth, maxPages,\r\n      initialPageId\r\n    } = props;\r\n\r\n    this._refPages = React.createRef()\r\n\r\n    this.hNextPage = throttleOnce(\r\n      this.hNextPage.bind(this)\r\n    )\r\n    this.hPrevPage = throttleOnce(\r\n      this.hPrevPage.bind(this)\r\n    )\r\n\r\n    this._PAGE_WIDTH = pageWidth\r\n    this._pagesStyle = {\r\n      width: `${maxPages*pageWidth}px`\r\n    }\r\n    this._pageStyle = {\r\n      width: `${pageWidth}px`,\r\n    }\r\n    this._direction = 0\r\n\r\n    this.state = {\r\n      pageCurrent: 1,\r\n      pages: [ this._crPageElement(initialPageId) ]\r\n    }\r\n  }\r\n\r\n  _crPageElement = id => React\r\n     .createElement(this.props.pageRouter[id], {\r\n        key: id,\r\n        style: this._pageStyle,\r\n        onPrevPage: this.hPrevPage,\r\n        onNextPage: this.hNextPage\r\n      })\r\n\r\n  hPrevPage = () => {\r\n    this.setState(prevState => {\r\n      if (prevState.pageCurrent > 1) {\r\n        prevState.pageCurrent -= 1\r\n        this._direction = -1\r\n      }\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  hNextPage = (id) => {\r\n    this.setState(prevState => {\r\n      const { pages } = prevState;\r\n      const _pageIndex = _findIndexById(pages, id);\r\n      prevState.pages = _pageIndex !== -1\r\n         ? _replaceElTo2(pages, _pageIndex)\r\n         : _addElTo2(pages, this._crPageElement(id))\r\n      prevState.pageCurrent += 1\r\n      this._direction = 1\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _crTransform = () => {\r\n    const pagesEl = this._refPages.current;\r\n    const WIDTH = this._PAGE_WIDTH;\r\n    let dX = 0;\r\n    if (this._direction !== 0 && pagesEl) {\r\n      const prevInt = _getTranslateX(pagesEl);\r\n      dX = this._direction === 1\r\n         ? prevInt - WIDTH\r\n         : prevInt + WIDTH\r\n      this._direction = 0\r\n    } else if ( this._direction === 0 && pagesEl) {\r\n      dX = _getTranslateX(pagesEl)\r\n    }\r\n    return {\r\n      transform: `translateX(${dX}px)`\r\n    };\r\n  }\r\n\r\n  _renderPages = () => {\r\n    const { pages, pageCurrent } = this.state;\r\n    return pages.map((Page, index) => React\r\n      .cloneElement(Page, {\r\n         pageCurrent,\r\n         pageNumber: index + 1,\r\n       }))\r\n  }\r\n\r\n  render(){\r\n    const { _pagesStyle } = this\r\n    , _transform = this._crTransform()\r\n    , _divStyle = {\r\n        ...S.PAGES,\r\n        ..._pagesStyle,\r\n        ..._transform\r\n      };\r\n    return (\r\n      <div style={S.SHOW_HIDE}>\r\n        <div\r\n          ref={this._refPages}\r\n          style={_divStyle}\r\n        >\r\n          {this._renderPages()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalSlider\r\n"]}