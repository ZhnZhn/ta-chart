{"version":3,"sources":["../../../src/components/charts/HollowChart.jsx"],"names":["sma","Ch","rsi","bollingerBand","fitWidth","scaleTime","chartFns","crTimeInterval","crTimeFormat","crExtends","ITEMS_NUM","MARGIN","left","right","top","bottom","S","EL","width","_xAccessor","d","date","HollowChart","props","id","style","data","resize","timeframe","sma20","options","windowSize","stroke","merge","c","accessor","sma50","bb","rsi14","calculatedData","timeInterval","timeFormat","xExtents","height","React","memo"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport Ch from './Ch'\r\nimport chartFns from './chartFns'\r\n\r\nimport CandleSeria from './series/CandleSeria'\r\nimport VolumeSeria from './series/VolumeSeria'\r\nimport RsiSeria from './series/RsiSeria'\r\nimport CloseSeria from './series/CloseSeria'\r\n\r\nconst {\r\n  sma, rsi, bollingerBand,\r\n  fitWidth\r\n} = Ch;\r\nconst {\r\n  scaleTime,\r\n  crTimeInterval,\r\n  crTimeFormat,\r\n  crExtends\r\n} = chartFns;\r\n\r\nconst ITEMS_NUM = 150;\r\n\r\nconst MARGIN = {\r\n\tleft: 50,\r\n\tright: 80,\r\n\t//top: 10,\r\n\ttop: 0,\r\n\tbottom: 30\r\n};\r\n\r\nconst S = {\r\n\tEL: {\r\n\t\twidth: '98%'\r\n\t}\r\n};\r\n\r\nconst _xAccessor = d => d\r\n ? d.date\r\n : 0;\r\n\r\nconst HollowChart = (props) => {\r\n  const {\r\n\t\tid,\r\n\t\tstyle,\r\n    data,\r\n\t\twidth,\r\n\t\tresize,\r\n    timeframe\r\n\t} = props;\r\n\r\n  const sma20 = sma()\r\n\t\t.options({ windowSize: 20, stroke: 'green' })\r\n\t\t.merge((d, c) => {d.sma20 = c;})\r\n\t\t.accessor(d => d.sma20)\r\n  , sma50 = sma()\r\n    .options({ windowSize: 50, stroke: 'orange' })\r\n    .merge((d, c) => {d.sma50 = c;})\r\n    .accessor(d => d.sma50)\r\n\t, bb = bollingerBand()\r\n\t  .merge((d, c) => {d.bb = c;})\r\n\t\t.accessor(d => d.bb)\r\n\t, rsi14 = rsi()\r\n\t\t.options({ windowSize: 14 })\r\n\t\t.merge((d, c) => {d.rsi = c;})\r\n\t\t.accessor(d => d.rsi);\r\n\r\n  const calculatedData = sma50(sma20(bb(rsi14(data))))\r\n\r\n  /*\r\n  const xScaleProvider = discontinuousTimeScaleProvider\r\n    .inputDateAccessor(d => d.date);\r\n  const {\r\n  data: calcData,\r\n  xScale,\r\n  xAccessor,\r\n  displayXAccessor,\r\n} = xScaleProvider(calculatedData);\r\n*/\r\n\r\n  useEffect(() => {\r\n\t\tresize()\r\n\t}, [])\r\n\r\n  const timeInterval = crTimeInterval(timeframe)\r\n  , timeFormat = crTimeFormat(timeframe)\r\n  , xExtents = crExtends(calculatedData, timeframe, ITEMS_NUM);\r\n\r\n  return (\r\n\t\t<div\r\n\t\t\tid={id}\r\n\t\t\tstyle={{...S.EL, ...style }}\r\n\t\t>\r\n    <Ch.ChartCanvas\r\n\t\t\tratio={2}\r\n\t\t\twidth={width}\r\n      height={550}\r\n\t\t\tmargin={MARGIN}\r\n      type=\"hybrid\"\r\n\t\t\tseriesName=\"Item\"\r\n      data={calculatedData}\r\n\t\t\txAccessor={_xAccessor}\r\n\t\t\txScale={scaleTime()}\r\n\t\t\txExtents={xExtents}\r\n     >\r\n\t\t\t {RsiSeria({ id: 1, height: 100, width: width, rsi: rsi14 })}\r\n\t\t\t {CloseSeria({ id: 2, height: 100})}\r\n\t\t\t {CandleSeria({\r\n          id: 3, height: 300,\r\n          timeInterval, timeFormat,\r\n          sma20, sma50, bb\r\n        })}\r\n\t\t\t  {VolumeSeria({\r\n           id: 4, height: 120,\r\n           timeInterval, timeFormat\r\n        })}\r\n        {<Ch.CrossHairCursor />}\r\n\t\t </Ch.ChartCanvas>\r\n\t\t  </div>\r\n  );\r\n}\r\n\r\nexport default fitWidth(React.memo(HollowChart))\r\n"],"file":"HollowChart.js"}