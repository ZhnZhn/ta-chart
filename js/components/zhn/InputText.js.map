{"version":3,"sources":["../../../src/components/zhn/InputText.jsx"],"names":["S","INPUT_TEXT","display","background","border","outline","height","paddingLeft","color","width","fontSize","fontWeight","backgroundColor","marginLeft","marginRight","C","BLANK","TEXT","ON","OFF","_isFn","fn","_getInitStateFrom","initValue","value","InputText","props","_handleInputChange","event","target","maxLenght","length","setState","_handleKeyDown","keyCode","preventDefault","isOnEnter","onEnter","state","onReg","style","type","spellCheck","placeholder","_autoCorrect","_spellCheck","Component","defaultProps"],"mappings":"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","file":"InputText.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst S = {\r\n  INPUT_TEXT : {\r\n    display : 'inline',\r\n    background: 'transparent none repeat scroll 0 0',\r\n    border: 'medium none',\r\n    outline: 'medium none',\r\n    height: '26px',\r\n    paddingLeft: '5px',\r\n    color: 'green',\r\n    width: '40px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    backgroundColor : '#E1E1CB',\r\n    marginLeft : '5px',\r\n    marginRight : '5px',\r\n  }\r\n};\r\n\r\nconst C = {\r\n  BLANK: '',\r\n  TEXT: 'text',\r\n  //NEW_TEXT: 'new-text',\r\n  ON: 'on',\r\n  OFF: 'off'\r\n}\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nconst _getInitStateFrom = ({ initValue }) => ({\r\n  initValue: initValue,\r\n  value: initValue != null ? initValue : C.BLANK\r\n});\r\n\r\nclass InputText extends Component {\r\n  /*\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    initValue: PropTypes.string,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    onEnter: PropTypes.func\r\n  }\r\n  */\r\n  static defaultProps = {\r\n    maxLenght: 125\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.isOnEnter = _isFn(props.onEnter)\r\n       ? true : false\r\n\r\n    this.state = _getInitStateFrom(props)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { onReg } = this.props;\r\n    if ( _isFn(onReg) ){\r\n      onReg(this)\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return props.initValue !== state.initValue\r\n      ? _getInitStateFrom(props)\r\n      : null;\r\n  }\r\n\r\n  _handleInputChange = (event) => {\r\n    const value = event.target.value\r\n    , { maxLenght } = this.props;\r\n    if (value.length <= maxLenght) {\r\n      this.setState({ value })\r\n    }\r\n  }\r\n _handleKeyDown = (event) => {\r\n    switch(event.keyCode){\r\n      case 27: case 46:\r\n         event.preventDefault()\r\n         this.setState({ value: C.BLANK })\r\n         break;\r\n      case 13:\r\n         if (this.isOnEnter) {\r\n           this.props.onEnter(event.target.value)\r\n         }\r\n         break;\r\n      default: return;\r\n    }\r\n }\r\n\r\n  render(){\r\n    const {\r\n           style, type,\r\n           spellCheck, placeholder,\r\n           maxLenght\r\n         } = this.props\r\n        , { value } = this.state\r\n        , _autoCorrect = spellCheck\r\n             ? C.ON\r\n             : C.OFF\r\n        , _spellCheck = spellCheck\r\n             ? true\r\n             : false;\r\n    return (\r\n      <input\r\n        style={{ ...S.INPUT_TEXT, ...style }}\r\n        type={type || C.TEXT}\r\n        name={C.TEXT}\r\n        autoCapitalize={C.OFF}\r\n        autoComplete={C.OFF}\r\n        autoCorrect={_autoCorrect}\r\n        spellCheck={_spellCheck}\r\n        translate={false}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        maxLength={maxLenght}\r\n        onChange={this._handleInputChange}\r\n        onKeyDown={this._handleKeyDown}\r\n      />\r\n    )\r\n  }\r\n\r\n  getValue() {\r\n    return this.state.value;\r\n  }\r\n  setValue(value) {\r\n    this.setState({ value })\r\n  }\r\n}\r\n\r\nexport default InputText\r\n"]}