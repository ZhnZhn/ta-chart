{"version":3,"sources":["../../../src/components/zhn-ch/Drawer.jsx"],"names":["CL","DRAWER_BT","DRAWER_SPAN","DRAWER_SVG","DRAWER","DRAWER_MODAL","S","BT_DRAWER","position","top","right","DRAWER_OFF","transform","pointerEvents","DRAWER_ON","MODAL_OFF","display","opacity","zIndex","transition","MODAL_ON","Drawer","state","isOpen","_setBodyOverflowY","document","body","style","overflowY","_hToggle","setState","prevState","props","btStyle","children","_drawerStyle","_drawerModalStyle","_onClickWrapper","undefined","React","cloneElement","onCloseDrawer","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;AACA;;AAEA,IAAMA,KAAK;AACTC,aAAW,WADF;AAETC,eAAa,aAFJ;AAGTC,cAAY,YAHH;AAITC,UAAQ,QAJC;AAKTC,gBAAc;AALL,CAAX;;AAQA,IAAMC,IAAI;AACRC,aAAW;AACTC,cAAU,UADD;AAETC,SAAK,CAFI;AAGTC,WAAO;AAHE,GADH;AAMRC,cAAY;AACV;AACAC,eAAW,mBAFD;AAGVC,mBAAe;AAHL,GANJ;AAWRC,aAAW;AACTF,eAAW;AADF,GAXH;AAcRG,aAAW;AACTC,aAAS,MADA;AAETC,aAAS,CAFA;AAGTC,YAAQ,CAAC,CAHA;AAITC,gBAAY;AAJH,GAdH;AAoBRC,YAAU;AACRJ,aAAS,OADD;AAERC,aAAS,CAFD;AAGRC,YAAQ,IAHA;AAIRC,gBAAY;AAJJ;AApBF,CAAV;;IA4BME,M;;;;;;;;;;;;;;oMACJC,K,GAAQ,EAAEC,QAAQ,KAAV,E,QAERC,iB,GAAoB,YAAM;AAAA,UAChBD,MADgB,GACL,MAAKD,KADA,CAChBC,MADgB;;AAExB,UAAIA,MAAJ,EAAY;AACVE,iBAASC,IAAT,CAAcC,KAAd,CAAoBC,SAApB,GAAgC,QAAhC;AACD,OAFD,MAEO;AACLH,iBAASC,IAAT,CAAcC,KAAd,CAAoBC,SAApB,GAAgC,MAAhC;AACD;AACF,K,QAEDC,Q,GAAW,YAAM;AACf,YAAKC,QAAL,CAAc;AAAA,eAAc;AAC1BP,kBAAQ,CAACQ,UAAUR;AADO,SAAd;AAAA,OAAd,EAEI,MAAKC,iBAFT;AAGD,K;;;;;6BAEO;AAAA,mBAKD,KAAKQ,KALJ;AAAA,UAEHC,OAFG,UAEHA,OAFG;AAAA,UAIHC,QAJG,UAIHA,QAJG;AAAA,UAMFX,MANE,GAMS,KAAKD,KANd,CAMFC,MANE;AAAA,UAOJY,YAPI,GAOWZ,SACVjB,EAAEQ,SADQ,GAEVR,EAAEK,UATH;AAAA,UAUJyB,iBAVI,GAUgBb,SACfjB,EAAEc,QADa,GAEfd,EAAES,SAZH;AAAA,UAaJsB,eAbI,GAacd,SACb,KAAKM,QADQ,GAEbS,SAfD;AAgBN;;;AACA,aAAO,CACH;AAAA;AAAA;AACE,eAAI,WADN;AAEE,qBAAWtC,GAAGC,SAFhB;AAGE,4CAAYK,EAAEC,SAAd,EAA4B0B,OAA5B,CAHF;AAIE,wBAAW,aAJb;AAKE,mBAAS,KAAKJ;AALhB;AAOE;AAAA;AAAA,YAAM,WAAW7B,GAAGE,WAApB;AACE;AAAA;AAAA;AACG,yBAAWF,GAAGG,UADjB;AAEG,yBAAU,OAFb;AAGG,uBAAQ,WAHX;AAIG,6BAAY;AAJf;AAME,oDAAM,MAAK,MAAX,EAAkB,GAAE,eAApB,GANF;AAOE,oDAAM,GAAE,+CAAR;AAPF;AADF;AAPF,OADG,EAoBH;AACE,aAAI,SADN;AAEE,uBAAa,CAACoB,MAFhB;AAGE,mBAAWvB,GAAGK,YAHhB;AAIE,eAAO+B,iBAJT;AAKE,iBAASC;AALX,QApBG,EA2BH;AAAA;AAAA;AACE,eAAI,OADN;AAEE,qBAAWrC,GAAGI;AACd;AAHF,YAIE,OAAO+B;AAJT;AAOII,wBAAMC,YAAN,CAAmBN,QAAnB,EAA6B;AAC3BO,yBAAe,KAAKZ;AADO,SAA7B;AAPJ,OA3BG,CAAP;AAwCD;;;EA3EkBa,gB;;kBA8ENrB,M;AACf","file":"Drawer.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n//import withTheme from '../hoc/withTheme'\r\n//import styleConfig from '../style/Comp.Style'\r\n\r\nconst CL = {\r\n  DRAWER_BT: 'drawer-bt',\r\n  DRAWER_SPAN: 'drawer-span',\r\n  DRAWER_SVG: 'drawer-svg',\r\n  DRAWER: 'drawer',\r\n  DRAWER_MODAL: 'drawer-modal',\r\n};\r\n\r\nconst S = {\r\n  BT_DRAWER: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 16\r\n  },\r\n  DRAWER_OFF: {\r\n    //transform: 'translateX(-264px)',\r\n    transform: 'translateX(334px)',\r\n    pointerEvents: 'none'\r\n  },\r\n  DRAWER_ON: {\r\n    transform: 'translate(0px, 0px)',\r\n  },\r\n  MODAL_OFF: {\r\n    display: 'none',\r\n    opacity: 0,\r\n    zIndex: -1,\r\n    transition: 'opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  },\r\n  MODAL_ON: {\r\n    display: 'block',\r\n    opacity: 1,\r\n    zIndex: 1000,\r\n    transition: 'opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\r\n  }\r\n}\r\n\r\nclass Drawer extends Component {\r\n  state = { isOpen: false }\r\n\r\n  _setBodyOverflowY = () => {\r\n    const { isOpen } = this.state;\r\n    if (isOpen) {\r\n      document.body.style.overflowY = 'hidden'\r\n    } else {\r\n      document.body.style.overflowY = 'auto'\r\n    }\r\n  }\r\n\r\n  _hToggle = () => {\r\n    this.setState(prevState => ({\r\n      isOpen: !prevState.isOpen\r\n    }), this._setBodyOverflowY)\r\n  }\r\n\r\n  render(){\r\n    const {\r\n       btStyle,\r\n       //theme,\r\n       children\r\n     } = this.props\r\n    , { isOpen } = this.state\r\n    , _drawerStyle = isOpen\r\n         ? S.DRAWER_ON\r\n         : S.DRAWER_OFF\r\n    , _drawerModalStyle = isOpen\r\n         ? S.MODAL_ON\r\n         : S.MODAL_OFF\r\n    , _onClickWrapper = isOpen\r\n         ? this._hToggle\r\n         : undefined;\r\n    //, TS = theme.createStyle(styleConfig);\r\n    return [\r\n        <button\r\n          key=\"bt-drawer\"\r\n          className={CL.DRAWER_BT}\r\n          style={{ ...S.BT_DRAWER, ...btStyle }}\r\n          aria-label=\"Open Drawer\"\r\n          onClick={this._hToggle}\r\n        >\r\n          <span className={CL.DRAWER_SPAN}>\r\n            <svg\r\n               className={CL.DRAWER_SVG}\r\n               focusable=\"false\"\r\n               viewBox=\"0 0 24 24\"\r\n               aria-hidden=\"true\"\r\n            >\r\n              <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\r\n            </svg>\r\n          </span>\r\n        </button>,\r\n        <div\r\n          key=\"wrapper\"\r\n          aria-hidden={!isOpen}\r\n          className={CL.DRAWER_MODAL}\r\n          style={_drawerModalStyle}\r\n          onClick={_onClickWrapper}\r\n        />,\r\n        <aside\r\n          key=\"aside\"\r\n          className={CL.DRAWER}\r\n          //style={{ ..._drawerStyle, ...TS.COMP }}\r\n          style={_drawerStyle}\r\n         >\r\n          {\r\n            React.cloneElement(children, {\r\n              onCloseDrawer: this._hToggle\r\n            })\r\n           }\r\n        </aside>\r\n      ];\r\n  }\r\n}\r\n\r\nexport default Drawer\r\n//export default withTheme(Drawer)\r\n"]}