{"version":3,"sources":["../../src/components/reducer.js"],"names":["_isDataValid","data","Array","isArray","length","reducer","state","action","type","DATA","LOADING","fetchStatus","FETCH","LOADED","providerTitle","itemTitle","timeframe","SUCCESS","LOAD_FAILED","FAILED","UPDATE","point","TypeError"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,SAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,KACzBA,IAAI,CAACG,MAAL,GAAY,EADS;AAAA,CAAzB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKC,qBAAKC,OAAV;AACC,2CACKJ,KADL;AAEEK,QAAAA,WAAW,EAAEC,sBAAMF;AAFrB;;AAID,SAAKD,qBAAKI,MAAV;AAAkB;AAAA,YACRZ,IADQ,GACCM,MADD,CACRN,IADQ;;AAEhB,YAAK,CAACD,YAAY,CAACC,IAAD,CAAlB,EAA2B;AACzB,iBAAOK,KAAP;AACD;;AACD,6CACKA,KADL;AAEEL,UAAAA,IAAI,EAAEM,MAAM,CAACN,IAFf;AAGEa,UAAAA,aAAa,EAAEP,MAAM,CAACO,aAHxB;AAIEC,UAAAA,SAAS,EAAER,MAAM,CAACQ,SAJpB;AAKEC,UAAAA,SAAS,EAAET,MAAM,CAACS,SALpB;AAMEL,UAAAA,WAAW,EAAEC,sBAAMK;AANrB;AAQD;;AACD,SAAKR,qBAAKS,WAAV;AACE,2CACKZ,KADL;AAEEK,QAAAA,WAAW,EAAEC,sBAAMO;AAFrB;;AAIF,SAAKV,qBAAKW,MAAV;AACE,2CACKd,KADL;AAEEL,QAAAA,IAAI,YAAOK,KAAK,CAACL,IAAb,GAAmBM,MAAM,CAACc,KAA1B;AAFN;;AAIF;AAAS,YAAM,IAAIC,SAAJ,CAAc,wBAAwBf,MAAM,CAACC,IAA7C,CAAN;AA9BX;AAgCD,CAjCD;;eAmCeH,O","sourcesContent":["import FETCH from './enumFetch'\r\nimport DATA from './enumData'\r\n\r\nconst _isDataValid = data => Array.isArray(data)\r\n || data.length>20;\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type){\r\n    case DATA.LOADING:\r\n     return {\r\n       ...state,\r\n       fetchStatus: FETCH.LOADING\r\n     };\r\n    case DATA.LOADED: {\r\n      const { data } = action;\r\n      if ( !_isDataValid(data) ) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        providerTitle: action.providerTitle,\r\n        itemTitle: action.itemTitle,\r\n        timeframe: action.timeframe,\r\n        fetchStatus: FETCH.SUCCESS\r\n      };\r\n    }\r\n    case DATA.LOAD_FAILED:\r\n      return {\r\n        ...state,\r\n        fetchStatus: FETCH.FAILED\r\n      };\r\n    case DATA.UPDATE:\r\n      return {\r\n        ...state,\r\n        data: [ ...state.data, action.point ]\r\n      };\r\n    default: throw new TypeError('Not existed action ' + action.type);\r\n  }\r\n}\r\n\r\nexport default reducer\r\n"],"file":"reducer.js"}